{"version":3,"sources":["components/Section/Section.module.scss","components/Statistics/Statistics.module.scss","redux/feedback/feedback-types.js","redux/feedback/feedback-reducer.js","redux/store.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","redux/feedback/feedback-actions.js","components/StatisticsTotal/StatisticsTotal.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js","components/StatisticsTotal/StatisticsTotal.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["module","exports","feedbackInitialState","good","neutral","bad","feedbackReducer","state","type","payload","actionTypes","rootReducer","combineReducers","feedback","store","createStore","composeWithDevTools","Section","title","children","className","styles","section","defaultProps","connect","dispatch","onLeaveFeedback","event","value","target","textContent","list","Object","keys","map","btnName","item","button","onClick","StatisticsTotal","total","percent","Notification","message","reduce","acc","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f5cd5e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__cEcRn\",\"title\":\"Section_title__dwThv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3r8OG\",\"item\":\"Statistics_item__1jHUK\",\"value\":\"Statistics_value__pMYpV\"};","const LEAVE = 'counter/onLeaveFeedback';\r\n\r\n// eslint-disable-next-line\r\nexport default {LEAVE} ;\r\n","import actionTypes from './feedback-types'; // Импорт типов\r\n\r\n// Изначальный стейт федбеков\r\nconst feedbackInitialState = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\n// Редюсер по фидбекам\r\nconst feedbackReducer = (state = feedbackInitialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.LEAVE: {\r\n      return {\r\n        ...state,\r\n        [payload]: (state[payload] += 1),\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default feedbackReducer;\r\n","import { createStore, combineReducers } from 'redux'; // Импортирует функцию создания хранилища и комбайн редюсеров\r\nimport { composeWithDevTools } from 'redux-devtools-extension'; // Импортирует прослойку для дев тулзов (до тулкита)\r\n\r\nimport feedbackReducer from './feedback/feedback-reducer';\r\n\r\n// Композиция редюсеров (собирает все редюсеры в корневой редюсер)\r\nconst rootReducer = combineReducers({\r\n  feedback: feedbackReducer,\r\n});\r\n\r\n// Создает хранилище + с корневым редюсером и прослойкой\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\n\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h1 className={styles.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux'; // Импорт функции конектита к глобальному хранилищу\nimport * as actions from '../../redux/feedback/feedback-actions'; // Импорт всех экшенов из папки фидбека\n\nimport styles from './FeedbackOptions.module.scss';\n\nconst FeedbackOptions = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <ul className={styles.list}>\n      {Object.keys(feedback).map(btnName => {\n        return (\n          <li className={styles.item} key={btnName}>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={onLeaveFeedback}\n            >\n              {btnName}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  feedback: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\n// Из стейта в пропы\nconst mapStateToProps = state => ({\n  feedback: state.feedback,\n});\n\n// Из стейта в пропы для методов\nconst mapDispatchToProps = dispatch => ({\n  onLeaveFeedback: event =>\n    dispatch(actions.onLeaveFeedback(event.target.textContent)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbackOptions);\n","import actionTypes from './feedback-types'; // Импорт типов\r\n\r\n// Экшн-криейтор это функция, возвращает обьект (действие), со свойством type (уникальная строка) и свойством value (payload)\r\nexport const onLeaveFeedback = value => ({\r\n  type: actionTypes.LEAVE,\r\n  payload: value,\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport styles from './StatisticsTotal.module.scss';\r\n\r\nconst StatisticsTotal = ({ total, percent }) => {\r\n  return (\r\n    <div>\r\n      <p className={styles.item}>\r\n        Total: <span className={styles.value}>{total}</span>\r\n      </p>\r\n      <p className={styles.item}>\r\n        Positive feedback: <span className={styles.value}>{percent}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatisticsTotal.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  percent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsTotal;\r\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\r\nimport StatisticsTotal from '../StatisticsTotal';\r\nimport Notification from '../Notification';\r\n\r\nimport { connect } from 'react-redux'; // Импорт функции конектита к глобальному хранилищу\r\n\r\nimport styles from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ feedback }) => {\r\n  // Считает общее количество отзывов\r\n  const total = Object.keys(feedback).reduce(\r\n    (acc, value) => acc + feedback[value],\r\n    0,\r\n  );\r\n\r\n  // Считает процент хороших отзывов\r\n  const percent = Math.round((feedback.good / total) * 100 || null);\r\n\r\n  return (\r\n    <>\r\n      {!!total ? (\r\n        <>\r\n          <ul className={styles.list}>\r\n            <li className={styles.item}>\r\n              <p>\r\n                Good: <span className={styles.value}>{feedback.good}</span>\r\n              </p>\r\n            </li>\r\n            <li className={styles.item}>\r\n              <p>\r\n                Neutral:{' '}\r\n                <span className={styles.value}>{feedback.neutral}</span>\r\n              </p>\r\n            </li>\r\n            <li className={styles.item}>\r\n              <p>\r\n                Bad: <span className={styles.value}>{feedback.bad}</span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n          <StatisticsTotal total={total} percent={percent} />\r\n        </>\r\n      ) : (\r\n        <Notification message={'No feedback given'} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  feedback: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\n// Из стейта в пропы\r\nconst mapStateToProps = state => ({\r\n  feedback: state.feedback,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","import Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics />\n      </Section>\n    </>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport store from './redux/store'; // Обьект с методами, экземпляр редакса\nimport { Provider } from 'react-redux'; // Провайдер для доступности хранилища везде\n\nimport App from './App.jsx';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticsTotal_item__11qEi\",\"value\":\"StatisticsTotal_value__2vwFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1WW5d\",\"item\":\"FeedbackOptions_item__2hr5z\",\"button\":\"FeedbackOptions_button__3VQV5\"};"],"sourceRoot":""}